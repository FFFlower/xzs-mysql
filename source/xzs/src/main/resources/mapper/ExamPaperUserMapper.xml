<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindskip.xzs.repository.ExamPaperUserMapper">
  <resultMap id="BaseResultMap" type="com.mindskip.xzs.domain.ExamPaperUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="exam_paper_id" jdbcType="INTEGER" property="examPaperId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, exam_paper_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    where id in
    <choose>
      <when test="list != null and list.size >0">
        <foreach item="id" collection="list" open="(" separator=","
                 close=")">
          #{id}
        </foreach>
      </when>
      <otherwise>(-1)</otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_exam_paper_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPaperId" parameterType="java.lang.Integer">
    delete from t_exam_paper_user
    where exam_paper_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mindskip.xzs.domain.ExamPaperUser" useGeneratedKeys="true" keyProperty="id">
    insert into t_exam_paper_user (id, user_id, exam_paper_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{examPaperId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mindskip.xzs.domain.ExamPaperUser" useGeneratedKeys="true" keyProperty="id">
    insert into t_exam_paper_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="examPaperId != null">
        exam_paper_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="examPaperId != null">
        #{examPaperId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mindskip.xzs.domain.ExamPaperUser">
    update t_exam_paper_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="examPaperId != null">
        exam_paper_id = #{examPaperId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mindskip.xzs.domain.ExamPaperUser">
    update t_exam_paper_user
    set user_id = #{userId,jdbcType=INTEGER},
        exam_paper_id = #{examPaperId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByCondition"  parameterType="com.mindskip.xzs.domain.ExamPaperUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    <where>
      <if test="id != null ">
        and t.id= #{id}
      </if>
      <if test="userId != null ">
        and t.user_id= #{userId}
      </if>
      <if test="examPaperId != null ">
        and t.exam_paper_id= #{examPaperId}
      </if>
    </where>
  </select>

  <select id="findByUserId"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="findByPaperId"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    where exam_paper_id = #{examPaperId,jdbcType=INTEGER}
  </select>

  <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    insert into t_exam_paper_user (user_id,exam_paper_id)
    values
    <foreach item="info" collection="list" separator=",">
      (
        #{info.userId,jdbcType=INTEGER},
        #{info.examPaperId,jdbcType=INTEGER}
      )
    </foreach>
  </insert>

  <select id="findByPaperIds"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_user
    where exam_paper_id in
    <choose>
      <when test="list != null and list.size >0">
        <foreach item="examPaperId" collection="list" open="(" separator=","
                 close=")">
          #{examPaperId}
        </foreach>
      </when>
      <otherwise>(-1)</otherwise>
    </choose>
  </select>

</mapper>
